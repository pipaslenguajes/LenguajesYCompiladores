1 - 
Hacer parsing ascendente de esta gramatica e indicar si hay algun conflicto. S es el start symbol y ya esta aumentada la gramatica.
S1->S
S->(L)
L->id
L->S
L->LS

(Rta: No hay conflicto.)

2 - 

Si se pasa la string "a9,a9,aa,99aa,aaa9a,999" a un analizador lexico con los siguientes tokens definidos, indicar que tira de tokens devuelve.
					  -------------------
LE: a...z|A...Z

DIG: 0...9

COMA: ","

EXP1: {{LE}{LE}}+ {print(EXP1);}

EXP2: {{COMA}}({LE}|{DIG})+ {print(EXP2);}

EXP3: {LE}({DIG}+){COMA} {print(EXP3);}




3 - Si se genera codigo intermedio a partir de parsing ascendente o descendente,
 cambia algo en el codigo assembler que se generara a partir de ese codigo intermedio?



4 - Graficar arbol sintactico para el siguiente fragmento de codigo 
(respuestas donde el gci verifacaba limites de vectores o no,
 ambas las consideraron bien los profesores)

a=0;

do
a=a+1;
if (a<4)
	b[a]=a+1;
endif
while (a<10)

(Rta: En imagen IMG_3666)

5-

Supongamos que se cambia un programa a un lexico con tipos guiados por sintaxis.
 Decir en que etapas se ven afectadas por esta modificacion.
(Tipos guiados por sintaxis es poner, por ejemplo, % antes del ID y sabes que es int,
 & antes del ID y sabes que es float...)


Decir que etapas se ven afectadas durante la compilacion y describir que pasa en cada una
a) AL
b) AS
c) GCI
d) GCASM
e) Ejecucion
f) ?Cambia la tabla de simbolos?








ej2 
(Rta: EXP3 EXP3 EXP1 EXP2 EXP2 EXP2.)
ej 3
(Rta: No, si se pudo generar codigo intermedio tanto con ascendente y descendente
 (a veces parsing descente no puede, si no esta factorizada o es recursiva por izquierda)
 la lista de reglas generada sera distinta pero disparara las mismas acciones semanticas, 
 por lo que el ASM generado a partir del GCI sera igual tambien.)



ej5 
(RTA:

a) AL: 		SI -> Nuevos caracteres a reconocer ( %, &, etc.)
 y enviar tokens de IDs ya con tipo aclarado

 b) AS: 		SI -> Nuevas reglas para que la sintaxis acepte esos tokens.

 c) GCI:		 NO -> El codigo intermedio que se genera no se ve afectado 
por el momento donde defino los tipos de variable.

d) GCASM: 		NO -> Si el GCI no esta afectado, menos el ASM.

e) Ejecucion:		 NO -> El cambio concierne solo la parte de compilacion.

f) ?Cambia la tabla de simbolos? : Ni, no cambia la estructura pero cambia el
 momento donde se asignan los tipos, ya desde el lexico podes saber el tipo de 
 la variable y no en analisis sintactico como suele ser.)

